<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction System</title>
    <link rel="stylesheet" href="styles/style.css">
    <script src="node.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.0/FileSaver.min.js" defer></script>


</head>
<body>
   <h1>Transaction Recording System</h1>
   <form>
    <label for="date">Date:</label>
    <input type="date" id="date" name="date">

    <label for="Transaction-type">Transaction Type:</label>
    <select name="transaction-type" id="transaction-type">
        <option value="income">
            Income
        </option>
        <option value="Expenses">
            expenses
        </option>
    </select><br>

    <label for="description">Description:</label>
    <input type="text" id="description" name="discription"><br>

    <label for="amount">Amount:</label>
    <input type="number" id="amount" name="amount"><br>

    <button type="button" id="add-btn">Add Transaction</button>
    

   </form>
   
   <h2>Transaction History</h2>
   
  

    <table id="transaction-table">
    <thread>
        <tr>
            <th>Date</th>
            <th>Time</th>
            <th>Type</th>
            <th>Description</th>
            <th>Amount </th>
            <th><button id="download-btn">Download Excel File</button></th>
        </tr>
    </thread>
    <tbody>
    </tbody>
        <tfoot>
            <tr>
                <td colspan="4">Total</td>
                <td id="total-amount"></td>

            </tr>
        </tfoot>
       </table>
</body>
</html>

body{
    font-family: Arial, sans-serif;
}
h1{
    text-align: center;
}
form{
    width: 50%;
    margin: 0 auto;
    border: 1 px solid #ccc;
    padding: 20px;
    border-radius: 5px;
 
}
label{
    display: inline;
    margin-bottom:5px ;

}
input[type="date"],
select,
input[type="text"],
input[type="number"]{
    width: 100%;
    padding: 10px;
    border: 1 px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-bottom: 10px;
}
#add-btn{
    background-color: #4CAF50;
    color:white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    float: right;
    
}
#download-btn{
   float: right;
}

button:hover {
    background-color: #45a049;
}
table{
    width: 50%;
    margin: 3px auto;
    border-collapse: collapse;
}
th,td{
    text-align: left;
    padding: 8px;
}
th{
    background-color: #4caf50;
    color: white;
}
tfoot td{
    text-align: right;
}
.income{
    color: green;
}
.expense{
    color: red;
}
h2{
    text-align: center;
}
/* #download-btn {
    display: none;
} */

/* #transaction-table tbody tr:first-child + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr + tr
 */
const url = 'http://localhost:3000/'; // replace with your server URL
const collectionName = 'transactionsData'; // replace with your collection name

// get the form and input elements
const form = document.getElementById('transaction-form');
const dateInput = document.getElementById('date');
const transactionTypeInput = document.getElementById('transaction-type');
const descriptionInput = document.getElementById('description');
const amountInput = document.getElementById('amount');

// set up the array to hold transaction data
let transactions = [];

// set up the total amount
let totalAmount = 0;
const totalAmountCell = document.getElementById('total-amount');

// add an event listener to the form submit button
form.addEventListener('submit', (event) => {
  event.preventDefault();

  // get the input values
  const date = dateInput.value;
  const transactionType = transactionTypeInput.value;
  const description = descriptionInput.value;
  const amount = parseInt(amountInput.value);
  const now = new Date();
  const timeString = now.toLocaleTimeString(); 
  const time = timeString;

  // add the transaction to the array
  const transaction = {
    date,
    time,
    transactionType,
    description,
    amount
  };
  transactions.push(transaction);

  // update the table and total amount
  const table = document.getElementById('transaction-table');
  const row = table.insertRow();
  const dateCell = row.insertCell(0);
  const timeCell = row.insertCell(1);
  const typeCell = row.insertCell(2);
  const descCell = row.insertCell(3);
  const amountCell = row.insertCell(4);

  dateCell.innerHTML = date;
  typeCell.innerHTML = transactionType;

  // update the total amount
  totalAmount += amount;
  totalAmountCell.innerHTML = `$${totalAmount}`;

  // send the transaction data to the server
  const transactionData = {
    date,
    time,
    transactionType,
    description,
    amount
  };

  fetch(url + collectionName, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(transactionData)
  })
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error(error));
});
